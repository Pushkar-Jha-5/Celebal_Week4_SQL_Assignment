--Question based on joins--

CREATE TABLE Hackers (
    hacker_id INTEGER PRIMARY KEY,
    name VARCHAR2(50)
);

CREATE TABLE Submissions (
    submission_id INTEGER PRIMARY KEY,
    hacker_id INTEGER,
    challenge_id INTEGER,
    score INTEGER
);

-- Hackers table--
INSERT INTO Hackers VALUES (90411, 'Joe');
INSERT INTO Hackers VALUES (86870, 'Todd');
INSERT INTO Hackers VALUES (8439, 'Angela');
INSERT INTO Hackers VALUES (5580, 'Rose');
INSERT INTO Hackers VALUES (52243, 'Patrick');
INSERT INTO Hackers VALUES (83082, 'Michael');
INSERT INTO Hackers VALUES (27205, 'Frank');
INSERT INTO Hackers VALUES (77726, 'Bonnie');
INSERT INTO Hackers VALUES (52348, 'Lisa');
INSERT INTO Hackers VALUES (57645, 'Kimberly');

-- Submissions table--
INSERT INTO Submissions VALUES (1, 90411, 71055, 30);
INSERT INTO Submissions VALUES (2, 90411, 66730, 100);
INSERT INTO Submissions VALUES (3, 86870, 71055, 30);
INSERT INTO Submissions VALUES (4, 8439, 66730, 92);
INSERT INTO Submissions VALUES (5, 8439, 36566, 80);
INSERT INTO Submissions VALUES (6, 52243, 36566, 77);
INSERT INTO Submissions VALUES (7, 77726, 36566, 30);
INSERT INTO Submissions VALUES (8, 27205, 21089, 10);
INSERT INTO Submissions VALUES (9, 52243, 71055, 20);
INSERT INTO Submissions VALUES (10, 83082, 4810, 40);

SELECT
    h.hacker_id,
    h.name,
    SUM(max_scores.max_score) AS total_score
FROM
    Hackers h
JOIN (
    SELECT
        s.hacker_id,
        s.challenge_id,
        MAX(s.score) AS max_score
    FROM
        Submissions s
    GROUP BY
        s.hacker_id,
        s.challenge_id
) max_scores
    ON h.hacker_id = max_scores.hacker_id
GROUP BY
    h.hacker_id,
    h.name
HAVING
    SUM(max_scores.max_score) > 0
ORDER BY
    total_score DESC,
    h.hacker_id;
